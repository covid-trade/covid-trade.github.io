document.createElementNS||(document.getElementsByTagName("form")[0].style.display="none");var colors=colorbrewer.RdYlGn[3].reverse().map((function(t){return d3.hsl(t)})),width=960,height=600,body=d3.select("body"),stat=d3.select("#status"),map=d3.select("#map").attr("preserveAspectRatio","xMidYMid").attr("viewBox","0 0 "+width+" "+height),layer=map.append("g").attr("id","layer"),mapFeatures=layer.append("g").attr("id","mapFeatures").selectAll("path"),tooltip=d3.select("#map-container").append("div").attr("class","ttip hidden"),zoom=d3.behavior.zoom().scaleExtent([1,10]).on("zoom",doZoom);map.call(zoom);var topology,geometries,proj=d3.geo.mercator(),dataById={},carto=d3.cartogram().projection(proj).properties((function(t){return dataById[t.properties.KTNAME]||console.log('ERROR: Entry "'+t.properties.KTNAME+'" was found in the Topojson but not in the data CSV. Please correct either of them.'),dataById[t.properties.KTNAME]})),scaleCheckbox=d3.select("#scale").on("change",(function(t){$(this).prop("checked")?location.hash="#"+$(this).val():location.hash=""}));function init(){var e=carto.features(topology,geometries),a=d3.geo.path().projection(proj),o=topology.bbox;t=[(o[0]+o[2])/2,(o[1]+o[3])/2],s=.95/Math.max((o[2]-o[0])/width,(o[3]-o[1])/height),s*=55,proj.scale(s).center(t).translate([width/2,height/2]),mapFeatures=mapFeatures.data(e).enter().append("path").attr("class","mapFeature").attr("id",(function(t){return getName(t)})).attr("fill","#ddd").attr("d",a),mapFeatures.on("mousemove",showTooltip).on("mouseout",hideTooltip),parseHash()}function reset(){stat.text("");var t=carto.features(topology,geometries),e=d3.geo.path().projection(proj);mapFeatures.data(t).transition().duration(750).ease("linear").attr("fill","#ddd").attr("d",e)}function update(){var t=Date.now(),e=function(t){return getValue(t)},a=mapFeatures.data().map(e).filter((function(t){return!isNaN(t)})).sort(d3.ascending),o=a[0],n=a[a.length-1],r=d3.scale.linear().range(colors).domain(o<0?[o,0,n]:[o,d3.mean(a),n]),i=d3.scale.linear().domain([o,n]).range([1,1e3]);carto.value((function(t){return i(e(t))}));var s=carto(topology,geometries).features;mapFeatures.data(s),mapFeatures.transition().duration(750).ease("linear").attr("fill",(function(t){return r(e(t))})).attr("d",carto.path);var d=(Date.now()-t)/1e3;stat.text(["calculated in",d.toFixed(1),"seconds"].join(" ")),hideUpdateIndicator()}window.onhashchange=function(){parseHash()},d3.json("ch_cantons.topojson",(function(t){topology=t,geometries=topology.objects.cantons.geometries,d3.csv("ch_cantons.csv",(function(t){dataById=d3.nest().key((function(t){return t.Canton})).rollup((function(t){return t[0]})).map(t),init()}))}));var deferredUpdate=function(){var t;return function(){return clearTimeout(t),stat.text("calculating..."),t=setTimeout((function(){update.apply(null,arguments)}),10)}}();function parseHash(){var t="#population"===location.hash;t?(scaleCheckbox.property("checked",t),showUpdateIndicator(),deferredUpdate()):reset()}function showTooltip(t,e){var a=d3.mouse(map.node()).map((function(t){return parseInt(t)})),o=$("#map").width(),n=$("#map").height(),r=a[0]*o/width,i=a[1]*n/height,s=Math.min(o-12*getName(t).length,r+20),d=Math.min(n-40,i+20);tooltip.classed("hidden",!1).attr("style","left:"+s+"px;top:"+d+"px").html(["<strong>",getName(t),"</strong><br/>","Population: ",formatNumber(getValue(t))].join(""))}function hideTooltip(){tooltip.classed("hidden",!0)}function doZoom(){mapFeatures.attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")").style("stroke-width",.5/d3.event.scale+"px"),hideTooltip()}function showUpdateIndicator(){body.classed("updating",!0)}function hideUpdateIndicator(){body.classed("updating",!1)}function getValue(t){return+t.properties["Population"]}function getName(t){return t.properties.Canton}function formatNumber(t){return t.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"'")}